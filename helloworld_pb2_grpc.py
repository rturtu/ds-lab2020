# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import helloworld_pb2 as helloworld__pb2


class MedApplicationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMedications = channel.unary_unary(
                '/helloworld.MedApplication/GetMedications',
                request_serializer=helloworld__pb2.User.SerializeToString,
                response_deserializer=helloworld__pb2.Medications.FromString,
                )
        self.MarkMedicationTaken = channel.unary_unary(
                '/helloworld.MedApplication/MarkMedicationTaken',
                request_serializer=helloworld__pb2.UserMedication.SerializeToString,
                response_deserializer=helloworld__pb2.Empty.FromString,
                )
        self.MarkMedicationNotTaken = channel.unary_unary(
                '/helloworld.MedApplication/MarkMedicationNotTaken',
                request_serializer=helloworld__pb2.UserMedication.SerializeToString,
                response_deserializer=helloworld__pb2.Empty.FromString,
                )


class MedApplicationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMedications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkMedicationTaken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkMedicationNotTaken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MedApplicationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMedications': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMedications,
                    request_deserializer=helloworld__pb2.User.FromString,
                    response_serializer=helloworld__pb2.Medications.SerializeToString,
            ),
            'MarkMedicationTaken': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkMedicationTaken,
                    request_deserializer=helloworld__pb2.UserMedication.FromString,
                    response_serializer=helloworld__pb2.Empty.SerializeToString,
            ),
            'MarkMedicationNotTaken': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkMedicationNotTaken,
                    request_deserializer=helloworld__pb2.UserMedication.FromString,
                    response_serializer=helloworld__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'helloworld.MedApplication', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MedApplication(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMedications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.MedApplication/GetMedications',
            helloworld__pb2.User.SerializeToString,
            helloworld__pb2.Medications.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkMedicationTaken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.MedApplication/MarkMedicationTaken',
            helloworld__pb2.UserMedication.SerializeToString,
            helloworld__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkMedicationNotTaken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.MedApplication/MarkMedicationNotTaken',
            helloworld__pb2.UserMedication.SerializeToString,
            helloworld__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
